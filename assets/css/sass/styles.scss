
/***************************   CSS META   *****************************

Project: Avani CondoPark Terminal
Version: 1.0.1
URL: https://tridel-avani.locomobi.com

Author: Eric Cavazos
Email: ericc@qpme.com
Github: https://github.com/ezos86
Twitter: @Smartass_io


/**************************************************************************
*************************   TABLE OF CONTENTS   ***************************
/**************************************************************************

0. Global Setup
    0.1 - Imports
    0.2 - Global Variables
    0.3 - Mixins & Functions
    0.4 - Global/Body/HTML Styles
    0.5 - Global Font Styles
    0.6 - Button Styles
    0.7 - Widgets
1. Helpers
	1.1 - Font Styles & Helpers
	1.2 - Spacing Helpers
	1.3 - Color Helpers
2. Header & Footer
	2.1 - Header Styles
	2.2 - Footer Styles
3. Page Styles
	3.1 - Login
	3.2 - Page 2
	3.3 - Page 3

/**************************************************************************
*******************************  END  *************************************
/**************************************************************************/



/**************************************************************************
							GLOBAL SETUP
/**************************************************************************/


/*--------------------------- 0.1 - Imports  --------------------------------*/

//Side Menu
@import 'libs/simplesidemenu';
@import 'libs/space-helpers';

//Font
@import url(https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,400,300,600,700,800);

//Buttons - Paper Style
@import 'libs/paper-buttons';

/*--------------------------- 0.2 - Global Variables  --------------------------------*/

//Base Colors
$green-main: #C31618;
$green-secondary: #CE2931;
$blue-main: #167AB6;
$blue-secondary: #2e2e2e;

$base-font-size:14px;
$base-font-family: 'Open Sans', 'Helvetica', sans-serif;


/*--------------------------- 0.3 - Mixins & Functions --------------------------------*/

//Basic Transition with Time parameter
@mixin transition($transition-property:all, $transition-time:1s, $method:linear) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@function em($px, $base: $base-font-size) {
    @return ($px / $base) * 1em;
}

//ClearFix
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

//Vertical Align
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}


/*--------------------- 0.4 - Global/Body/HTML Styles  ------------------------------*/

html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

.container-fluid{
  padding:0;
}

//Font Setup
h1,h2,h3,h4,h5,section,div,span,p,ul,li,table,thead,tr,td,small{
	font-family: $base-font-family;
}

h4{
  line-height: 2.3rem;
}

a{
	&:hover{
		text-decoration: none;
	}
}

a[ng-click]{
    cursor: pointer;
}

.clearfix{
  @include clearfix();
}

.white{
	color:#fff;
}

.center{
	text-align:center;
}

#header{
  background-color: rgba(48, 140, 175, 0.1);
  border-bottom:1px solid $blue-main;
  padding-top:10px;
  margin-bottom:10px;
	@include clearfix();
	h1{
		margin-top:0;
	}
}

.gradient-border{
  width: 100%;
  height: 0px;
  margin: auto;
  background: #eee;
  border: 1px solid transparent;
  -moz-border-image: -moz-linear-gradient(left, #3acfd5 0%, #3a4ed5 100%);
  -webkit-border-image: -webkit-linear-gradient(left, #3acfd5 0%, #3a4ed5 100%);
  border-image: linear-gradient(to right, #3acfd5 0%, #3a4ed5 100%);
  border-image-slice: 1;
  margin-bottom:20px;
}

.form-control:focus{
  box-shadow:none;
}

.red{
  color:red;
}

.blue{
  color:#337ab7;
}

.italic{
  font-style: italic;
}

.block{
  display: block;
}

/*--------------------- 3.1 - Login Page  ------------------------------*/

.login-box{
	border-radius:5px;
	border: 1px solid #167AB6;
	box-shadow: 0px 0px 5px rgba(88, 168, 236, 0.5);
	padding: 20px;
	position: relative;
  	top: 50%;
	transform: translateY(50%);
	min-height:350px;
	margin-left: -8%;
	margin-top:30%;
	background-color:rgba(255,255,255,1);
	.logo-box {
		padding:10px;
		text-align: center;
		margin-bottom:10px;
		img{
			width:80%;
		}
	}
	.login-input{
		border: none;
		border-bottom: 2px solid #939393;
		font-size: 2rem;
		outline: none;
		width:100%;
		font-family: 'Open Sans';
		font-weight: 200;
		letter-spacing: .05rem;
    padding-left:10px;
		border-bottom:1px solid #ccc;
		//background-color: rgba(0,0,0,.04);
		@include transition(all, .2s);
		&:focus{
			border-bottom: 1px solid #167AB6;
			background:none;
		}
	}
	.ng-valid.ng-dirty{
		border-color:#70BF5B;
		//border:none;
	}

}

/** Floating Background Widgets **/
.wrapper {
  background: #50a3a2;
  background: -webkit-linear-gradient(top left, #50a3a2 0%, #53e3a6 100%);
  background: linear-gradient(to bottom right, #50a3a2 0%, #53e3a6 100%);
  background: url('../img/login-bg.jpeg') center center no-repeat;
  background-size:cover;
  position: absolute;
  left: 0;
  top:0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: -999;
}

.bg-bubbles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}
.bg-bubbles li {
  position: absolute;
  list-style: none;
  display: block;
  width: 40px;
  height: 40px;
  background-color: rgba(255, 255, 255, 0.15);
  bottom: -160px;
  -webkit-animation: square 25s infinite;
  animation: square 25s infinite;
  -webkit-transition-timing-function: linear;
  transition-timing-function: linear;
}
.bg-bubbles li:nth-child(1) {
  left: 10%;
}
.bg-bubbles li:nth-child(2) {
  left: 20%;
  width: 80px;
  height: 80px;
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
  -webkit-animation-duration: 17s;
          animation-duration: 17s;
}
.bg-bubbles li:nth-child(3) {
  left: 25%;
  -webkit-animation-delay: 4s;
          animation-delay: 4s;
}
.bg-bubbles li:nth-child(4) {
  left: 40%;
  width: 60px;
  height: 60px;
  -webkit-animation-duration: 22s;
          animation-duration: 22s;
  background-color: rgba(255, 255, 255, 0.25);
}
.bg-bubbles li:nth-child(5) {
  left: 70%;
}
.bg-bubbles li:nth-child(6) {
  left: 80%;
  width: 120px;
  height: 120px;
  -webkit-animation-delay: 3s;
          animation-delay: 3s;
  background-color: rgba(255, 255, 255, 0.2);
}
.bg-bubbles li:nth-child(7) {
  left: 32%;
  width: 160px;
  height: 160px;
  -webkit-animation-delay: 7s;
          animation-delay: 7s;
}
.bg-bubbles li:nth-child(8) {
  left: 55%;
  width: 20px;
  height: 20px;
  -webkit-animation-delay: 15s;
          animation-delay: 15s;
  -webkit-animation-duration: 40s;
          animation-duration: 40s;
}
.bg-bubbles li:nth-child(9) {
  left: 25%;
  width: 10px;
  height: 10px;
  -webkit-animation-delay: 2s;
          animation-delay: 2s;
  -webkit-animation-duration: 40s;
          animation-duration: 40s;
  background-color: rgba(255, 255, 255, 0.3);
}
.bg-bubbles li:nth-child(10) {
  left: 90%;
  width: 160px;
  height: 160px;
  -webkit-animation-delay: 11s;
          animation-delay: 11s;
}
@-webkit-keyframes square {
  0% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
  100% {
    -webkit-transform: translateY(-1000px) rotate(600deg);
            transform: translateY(-1000px) rotate(600deg);
  }
}
@keyframes square {
  0% {
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
  100% {
    -webkit-transform: translateY(-1000px) rotate(600deg);
            transform: translateY(-1000px) rotate(600deg);
  }
}

/*--------------------- 2.0 - Top Navbar  ------------------------------*/

#top-nav{
  height:50px;
}

.full-img{
  width:100%;
}

.navbar{
  background-color:rgba(255,255,255,.9);
  border-bottom:1px solid #51ACDB;;
  box-shadow: 0 1px 2px rgba(0,0,0,.2);
  min-height:50px;
}

.navbar-brand{
  padding:5px 30px;
  max-width:250px;
  border-right: 1px solid #51ACDB;
  padding-left:80px;
  img{
    width:60%;
  }
}

.navbar-right{
  margin-right:30px;
}

.closed{
  color:#333 !important;
}

.nav-user{
  float:right;
  color: #666;
  cursor: pointer;
  margin: 15px;
}

/*--------------------- 2.1 - Side Navbar  ------------------------------*/
.menu-icon{
  position: absolute;
  z-index: 9999;
  top:15px;
  margin-left:10px;
  border: none;
  outline: none;
  font-size: 18px;
  font-weight: 100;
  right: -40px;
  width: 20px;
  @include transition(all,.2s);
}
.menu-close{
  color: #333;
  font-size:12px;
  cursor: pointer;
}
.menu-open{
  color: #51ACDB;
  cursor: pointer;
}

.nav-expand{
	position: absolute;
	top: 14px;
	right: 10px;
}

.reports-nav{

}

a.reports-link.down{
    text-decoration: none;
    color: #fff;
    background: rgba(255,255,255,0.2) !important;
}

.sub-reports {
  height:0;
  overflow:hidden;
  background-color:rgba(255,255,255,.1);
  @include transition(all,.2s);
  ul{
    margin-left:0;
    border-left:10px solid #32A7E2;
    padding: 0;
    list-style:none;
    li{
      a{
        color:#E8E8E8;
      }
    }
  }
}


.sub-reports.active-list {
  height:120px;
  //@include transition(all,.2s);
}

.nav-expand{
  -ms-transform: rotate(0deg); /* IE 9 */
  -webkit-transform: rotate(0deg); /* Chrome, Safari, Opera */
  transform: rotate(0deg);
  transform-origin: 25px center;
  transform-style: preserve-3D;
  @include transition(all,.2s);
}

.nav-expand.chevron-down{
  -ms-transform: rotate(90deg); /* IE 9 */
  -webkit-transform: rotate(90deg); /* Chrome, Safari, Opera */
  transform: rotate(90deg);
}

/*--------------------- 3.2 - Widget Styles  ------------------------------*/

#widget-content{
  .row{
    margin-bottom:20px;
  }
}

.widget-container{
  padding:0;
  h4{
    font-weight:100;
  }
  .widget-icon-wrapper{
    text-align: center;
    padding:0;
    padding-top: 25px;
  }
  .widget-content-wrapper{
    border-left:1px solid #fff;
    height:100%;
    h1{
      margin-top:10px;
    }
  }
}

.widget-a{
  background-color:#51B4A3;
  color:#fff;
}

.widget-b{
  background-color:#32A7E2;
  color:#fff;
}

.widget-c{
  background-color:#B85796;
  color: #fff;
}

.widget-list{
  border:1px solid #51B4A3;
  .list-container{
    width:100%;
    margin:0 auto;
    overflow: auto;
    height: 239px;
    @include clearfix();
    .widget-list-icon{
      margin-right:20px;
    }
  }
}

.widget-sm{
  height:100px;
}

.widget-md{
  height:200px;
  max-height:200px;
}

.widget-lg{
  height:300px;
}

.widget-icon{
  font-size:4rem;
}

.widget-title{
  background-color:#51B4A3;
  color:#fff;
  text-align:center;
  h4{
    margin:0;
    padding:20px 0;
  }
}


/*****************************************************************************
***************************   MOBILE TABLE STYLES    *************************
/****************************************************************************/


@media only screen and (max-width: 767px){
  .menu-icon{
    left: 10px;
    right: 0px;
  }

  .navbar-brand{
    max-width: 100%;
  }

  .navbar-brand img {
      width: 30%;
      margin-left: 25%;
      max-width:250px;
  }

  .nav-user{
    position:absolute;
    top:0;
    right:0;
  }

}

@media(min-device-width: 768px) and (max-device-width: 1024px)  {
  


  #currently-parked-table{
    /* Force table to not be like tables anymore */
    table, thead, tbody, th, td, tr { 
      display: block; 
    }
    
    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr { 
      position: absolute;
      top: -9999px;
      left: -9999px;
    }
    
    tr { border: 1px solid #ccc; }
    
    td { 
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid #eee; 
      position: relative;
      padding-left: 50%;
      min-height:14px;
    }
    
    td:before { 
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 6px;
      left: 6px;
      width: 45%; 
      padding-right: 10px; 
      white-space: nowrap;
    }
    
    /*
    Label the data
    */
    // td:nth-of-type(1):before { content: "First Name"; }
    // td:nth-of-type(2):before { content: "Last Name"; }
    // td:nth-of-type(3):before { content: "Job Title"; }
    // td:nth-of-type(4):before { content: "Favorite Color"; }
    // td:nth-of-type(5):before { content: "Wars of Trek?"; }
    // td:nth-of-type(6):before { content: "Porn Name"; }
    // td:nth-of-type(7):before { content: "Date of Birth"; }
    // td:nth-of-type(8):before { content: "Dream Vacation City"; }
  }
}


/*------------------  Dropdown Styles  ----------------------- */

ul.dropdown{
  list-style: none;
  //height:4rem;
  max-height:40px;
  overflow: hidden;
  padding-left:0;
  position:absolute;
  z-index:999;
  @include transition(all, .05s, linear);
  li{
    cursor:pointer;
    border: 1px solid #f1f1f1;
    border-bottom:none;
    padding: 10px;
    background-color:#f1f1f1;
    &:hover{
      color:#fff;
      background-color: #51ACDB;
    }
  }
  .dropdown-icon{
    position: absolute;
    top: 14px;
    right: 30px;
    -ms-transform: rotate(0deg); /* IE 9 */
    -webkit-transform: rotate(0deg); /* Chrome, Safari, Opera */
    transform: rotate(0deg);
    transform-origin: 5px center;
    transform-style: preserve-3D;
    @include transition(all,.05s);
  }
}

ul.active{
  max-height:3000px;
  .dropdown-icon{
    position: absolute;
    top: 14px;
    right: 30px;
    -ms-transform: rotate(90deg); /* IE 9 */
    -webkit-transform: rotate(90deg); /* Chrome, Safari, Opera */
    transform: rotate(90deg);
  }
  li{
    border:1px solid #51ACDB;
    border-bottom:none;
  }
  li:last-child{
    border-bottom:1px solid #51ACDB;
  }
  li:first-child{
    background-color:#51ACDB;
    color:#fff;
  }
}

.navbar-header{
  position:relative;
}

/*-------- Input sizes -------------- */
.input-sm{
  width:100px;
}

.input-md{
  width:200px;
}

.input-lg{
  width:300px;
}

.input-xl{
  width:400px;
}

.inline{
  display: inline-block;
}


.visitorPermit-controls{
  border-top:1px solid #f1f1f1;
  padding-top:20px;
}


table.dataTable thead > tr > th, table.dataTable tbody > tr > td {
  font-size:12px;
}

.login-error{
  color:red;
  text-align:center;
  margin-bottom:10px;
  font-size: 12px;
}

.remove-resident{
  text-align:center;
}

.lot-list{
  padding:0;
  list-style: none;
}

.lot-list > li {
    float: left;
    margin-right: 20px;
    span{
      margin-left:5px;
    }
}

/*------------------- old code ---------------------- */


$color1 : #333;
$color2: #eee;

.panel1 {
  display: none;
  color: $color2;
}

.active1 {
  display: initial;
}

.ng-invalid.ng-dirty{
	border-color:#FA787E;
}
.ng-valid.ng-dirty{
	border-color:#78FA89;
}



.notifications{
  z-index: 9999;
  position: relative;
}





///DEMO CODE
body {
  background: #29a1da;
}

#PINform input:focus,
#PINform select:focus,
#PINform textarea:focus,
#PINform button:focus {
  outline: none;
}
#PINform {
    background: #ededed;
    width: 80%;
    padding: 30px;
    margin: 0 auto;
    margin-top: 100px;
      -webkit-box-shadow: 0px 5px 5px -0px rgba(0,0,0,0.3);
         -moz-box-shadow: 0px 5px 5px -0px rgba(0,0,0,0.3);
              box-shadow: 0px 5px 5px -0px rgba(0,0,0,0.3);
}
#PINbox {
  background: #e6e6e6;
    margin: 3.5%;
    width: 92%;
    font-size: 48px;
    text-align: center;
    border: 1px solid #CCC;
}
.PINbutton {
  background: #ededed;
  color: #7e7e7e;
  border: none;
  /*background: linear-gradient(to bottom, #fafafa, #eaeaea);
      -webkit-box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);
         -moz-box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);
              box-shadow: 0px 2px 2px -0px rgba(0,0,0,0.3);*/
  border-radius: 50%;
  font-size: 1.5em;
  text-align: center;
  width: 60px;
  height: 60px;
  margin: 7px 20px;
  padding: 0;
}
.clear, .enter {
  font-size: 1em;
}
.PINbutton:hover {
  box-shadow: #506CE8 0 0 1px 1px;
}
.PINbutton:active {
  background: #506CE8;
  color: #fff;
}
.clear:hover {
  box-shadow: #ff3c41 0 0 1px 1px;
}
.clear:active {
  background: #ff3c41;
  color: #fff;
}
.enter:hover {
  box-shadow: #47cf73 0 0 1px 1px;
}
.enter:active {
  background: #47cf73;
  color: #fff;
}
.shadow{
      -webkit-box-shadow: 0px 5px 5px -0px rgba(0,0,0,0.3);
         -moz-box-shadow: 0px 5px 5px -0px rgba(0,0,0,0.3);
              box-shadow: 0px 5px 5px -0px rgba(0,0,0,0.3);
}


.pay-amount{
  font-size:120px;
  color:#fff;
  margin-top:300px;
}

.pay-btn{
  min-width: 300px;
  border-radius: 0;
  text-transform: uppercase;
  font-size: 40px;
  padding: 35px 90px;
  margin-top: 110px !important;
}

.receipt-img{
  margin-top:100px;
}

.welcome-block{
  padding-top: 300px;
  padding-bottom: 300px;
}

.welcome-text{
  font-size: 90px;
  font-weight: 100;
  color: #fff;
  text-align: center;
  text-transform: uppercase;
  letter-spacing:1px;
}

.welcome-subtext{
  font-size:55px;
  font-weight: 100;
  color: #fff;
  text-align: center;
}

.success-text{
  font-size:48px;
  margin-top:50px;
  line-height: 58px;
}











@import url(//fonts.googleapis.com/css?family=Open+Sans:300,400|Inconsolata);
$alpha: 1,2,3,4,5,6,7,8,9,0,"-","=",q,w,e,r,t,y,u,i,o,p,"[","]","\\",a,s,d,f,g,h,j,k,l,";","'",z,x,c,v,b,n,m,",",".","/","space";
$alpha-shift: "!","@","#","$","%","^","&","*","(",")","_","+",Q,W,E,R,T,Y,U,I,O,P,"{","}","|",A,S,D,F,G,H,J,K,L,":",'"',Z,X,C,V,B,N,M,"<",">","?","space";
$board-count: 20;

// build out the selectors for hiding and showing keyboards
// as well as toggling shift and the active state for delete and shift
// labels do not have active states, because they pass it along to their `for` input.
// therefore, to style the "active" state of a label, you do input#id:active ~ label[for="id"] { the style }
$initial-checked-sel: "";
$board-hide-sel: "";
$board-show-sel: "";
$shift-key-sel: "";
$shift-board-sel: "";
$active-sel: "";
@for $i from 0 through $board-count {
  // active states for delete and shift keys
  $active-sel: $active-sel + "#in-#{$i}-delete:active  ~ section#board-#{$i} [for=\"in-#{$i}-delete\"],";
  $active-sel: $active-sel + "#shift-#{$i}-shift:active  ~ section#board-#{$i} [for=\"shift-#{$i}-shift\"],";
  // when shift is checked, style its label to indicate shifting
  $shift-key-sel: $shift-key-sel + "#shift-#{$i}-shift:checked ~ section [for=\"shift-#{$i}-shift\"],";
  // update the board when shift is selected
  $shift-board-sel: $shift-board-sel + "#shift-#{$i}-shift:checked ~ #board-#{$i},";
  // show hide the current character's board
  $board-hide-sel: $board-hide-sel + "[id^=\"in-#{$i}-\"]:not(#in-#{$i}-delete):checked ~ #board-#{$i}:not(:first-of-type), ";
  $board-show-sel: $board-show-sel + "[id^=\"in-#{$i}-\"]:not(#in-#{$i}-delete):checked ~ #board-#{$i + 1}, ";
  @if($i < $board-count - 1) {
    // we need delete keys, since a board's delete is in the _next_ board.
    $initial-checked-sel: $initial-checked-sel + "#in-#{$i + 1}-delete:checked";
    // if less than second to last add tilde to chain the delete key selectors above
    @if($i < $board-count - 2) {
      $initial-checked-sel: $initial-checked-sel + " ~ ";
    }
  }
}

// build out the selectors for output and active state
// for each letter
@for $a from 0 through length($alpha) - 1 {
  $letter-output-sel: "";
  $letter-cap-output-sel: "";
  // for each board
  @for $i from 0 through $board-count {
    // add that board's instance of the letter
    // for the :active state of the input
    $active-sel: $active-sel + "#in-#{$i}-#{$a}:active ~ section#board-#{$i} [for=\"in-#{$i}-#{$a}\"],";
    // for the :checked without shift state of the input
    $letter-output-sel: $letter-output-sel + "#in-#{$i}-#{$a}:checked ~ #shift-#{$i}-shift:not(:checked) ~ #out #out-#{$i}::after, ";
    // for the :checked with shift state of the input
    $letter-cap-output-sel: $letter-cap-output-sel + "#in-#{$i}-#{$a}:checked ~ #shift-#{$i}-shift:checked ~ #out #out-#{$i}::after, ";
  }
  // grab the value for lower and shifted
  $low: nth($alpha, $a + 1);
  $cap: nth($alpha-shift, $a + 1);
  // if letter is "space", change the pseudo content to render as space
  @if $low == "space" { $low: "\00a0"; }
  @if $cap == "space" { $cap: "\00a0"; }
  // set the content.
  #{$letter-output-sel} { content: "#{$low}"; }
  #{$letter-cap-output-sel} { content: "#{$cap}"; }
}

// when input is active, style its label
#{$shift-key-sel},
#{$active-sel} {
  background: #BBB;
  color: #FFF;
  box-shadow: 0px 0px 0px 1px #AAA;
}

// when shifted, uppercase dat ish
#{$shift-board-sel} {
  text-transform: uppercase;
}

// hide all boards
[id^="board-"],
#{$board-hide-sel} {
  display: none;
}

// show board when active
#{$board-show-sel},
#{$initial-checked-sel} ~ #board-0 {
  display: flex;
}

// style keyboard
$gutter: 4px;
$label-h: 56px;
[id^="board-"] {
  width: 740px;
  margin: 1rem auto;
  box-sizing: border-box;
  padding: $gutter * 2;  
  border-radius: 4px;
  background: #EEE;
  box-shadow: 0px 1px 0px 2px #DDD;
  flex-wrap: wrap;
  font-family: 'Open Sans', 'Helvetica Neue', Helvetica, sans-serif;
}
  
  // full labels
  label[for^="shift-"],
  label[for$="-46"],
  label[for$="-delete"] {
    text-transform: none;
    font-size: 0.8em;
    line-height: $label-h * 1.5!important;
  }
  label[for^="shift-"] { 
    flex-basis: calc(20% - #{$gutter * 2});
    order: 101; 
    text-align: left!important;
  }
  label[for$="-46"] {
    color: white;
    flex-basis: calc(60% - #{$gutter * 2});
    order: 102;
  }
  label[for$="-delete"] {
    flex-basis: calc(20% - #{$gutter * 2});
    order: 103;
    text-align: right!important;
  }
  
  [id^="board-"] label { 
    text-align: center; 
    box-sizing: border-box;
    height: $label-h;
    line-height: $label-h;
    padding: 0 0.5rem;
    margin: $gutter;
    user-select: none;
    border-radius: 4px;
    background: #FFF;
    box-shadow: 0px 1px 0px 2px #DDD;
    cursor: pointer;
    position: relative;
    &:hover {
      box-shadow: 0px 0px 0px 1px #AAA;
    }
    &::before {
      font-size: 0.8em;
      display: block;
      text-align: center;
      line-height: 2;
      margin-bottom: $label-h / -4;
      left: 0;
    }
  }
  
  // justify rows. using this map as a guide for which letters on which rows
  $rows: (
    (1,2,3,4,5,6,7,8,9,0,"-","="),
    (q,w,e,r,t,y,u,i,o,p,"[","]","\\"),
    (a,s,d,f,g,h,j,k,l,";","'"),
    (z,x,c,v,b,n,m,",",".","/")
  );
  // verify a char is not a number or symbol by checking against this map
  $letter: (z,x,c,v,b,n,m,a,s,d,f,g,h,j,k,l,q,w,e,r,t,y,u,i,o,p);
  // track the global index by adding to this on each loop through rows
  $add: 0;
  // for eac hrow
  @each $r in $rows {
    $sel: "";
    $count: length($r);
    $rat: 1 / $count;
    // for each item in row
    @for $a from 0 through length($r) - 1 { 
      // make a label selector
      $sel: $sel + "[for$=\"-#{$a + $add}\"], "; 
      // add symbol if not an uppercase on shift
      $shift: nth($alpha-shift, $add + $a + 1);
      $let: nth($alpha, $add + $a + 1);
      $is-letter: index($letter, $let);
      @if $is-letter {
      } @else {
        // override with shift content
        [for$="-#{$a + $add}"]::before {
          content: "#{$shift}";
        }
      }
    }
    // increase the master counter
    $add: $add + $count;
    // give each item in row the same equally divided flex-basis for perfect wrapping
    #{$sel} { flex-basis: calc(#{$rat * 100%} - #{$gutter * 2}); }
  }

// deactivate on last
#board-#{$board-count} label:not([for$="-delete"]) {
  background: #BBB;
  color: #999;
  box-shadow: 0px 0px 0px 1px #AAA;
  font-style: italic;
  pointer-events: none;
}

$out-size: 12rem;
$out-font: 2.4rem;
#out {
  height: $out-size;
  width: 740px;
  margin: 1rem auto;
  font-size: $out-font;
  line-height: $out-size;
  text-align: center;
  padding: 1rem 0;
  background: #222;
  color: white;
  border-radius: 4px;
  text-shadow: 1px 1px 0px black;
  box-shadow: 0px 1px 0px 2px #111;  
  span {
    border-bottom: 1px solid #CCC;
  }
}

body {
  background: #36494E;
  text-align: center;
  padding: 1rem;
}

[for="show-radios"] {
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  font-size: 0.8rem;
  background: #222;
  color: #CCC;
  cursor: pointer;
  box-shadow: 0px 0px 0px 2px black;
  border-radius: 4px;
  display: inline-block;
  margin: 1rem 0 0;
  user-select: none;
  &:hover {
    box-shadow: 0px 0px 0px 1px black;
  }
  &::before {
    content: "Show ";
  }
}

#show-radios {
  position: absolute;
  top: -100px;  
  &:not(:checked) ~ input {
    position: absolute;
    top: -100px;
  }
  &:active ~ [for="show-radios"] {
    background: #333;
  }
  &:checked ~ [for="show-radios"]::before {
    content: "Hide ";
  }
}

.keyboard table{
  width:100%;
}

.keyboard-btn{
  font-size: 24px;
  padding: 10px 30px;
}
